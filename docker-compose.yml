version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: leaderboard-postgres
    environment:
      POSTGRES_DB: leaderboard
      POSTGRES_USER: leaderboard_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - leaderboard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U leaderboard_user -d leaderboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: leaderboard-service
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/leaderboard
      DATABASE_USER: leaderboard_user
      DATABASE_PASSWORD: ${DB_PASSWORD:-change_this_password}
      SERVER_PORT: 8080
      ENVIRONMENT: ${ENVIRONMENT:-production}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - leaderboard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: leaderboard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - leaderboard-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  leaderboard-network:
    driver: bridge
